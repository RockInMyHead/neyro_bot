// Mini App JavaScript –¥–ª—è Telegram –±–æ—Ç–∞

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
let lastAddedMessageHash = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    tg.expand();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É (–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–µ—Ä—Å–∏–∏)
    if (tg.setHeaderColor) {
        tg.setHeaderColor('#007bff');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    if (tg.setBackgroundColor) {
        tg.setBackgroundColor('#ffffff');
    }
    
    // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    if (tg.enableClosingConfirmation) {
        tg.enableClosingConfirmation();
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = tg.initDataUnsafe?.user;
    console.log('initApp - Telegram WebApp user data:', user);
    console.log('initApp - tg.initDataUnsafe:', tg.initDataUnsafe);
    console.log('initApp - tg.initData:', tg.initData);
    
    if (user) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ tg.initDataUnsafe:', user);
        updateUserInfo(user);
    } else {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ tg.initDataUnsafe, –ø—Ä–æ–±—É–µ–º initData');
        try {
            const initData = tg.initData;
            if (initData) {
                const urlParams = new URLSearchParams(initData);
                const userParam = urlParams.get('user');
                if (userParam) {
                    const userData = JSON.parse(decodeURIComponent(userParam));
                    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ initData:', userData);
                    updateUserInfo(userData);
                } else {
                    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ initData');
                }
            }
        } catch (e) {
            console.log('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ initData:', e);
        }
        
        // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if (!user) {
            const testUser = {
                id: Math.floor(Math.random() * 1000000) + 100000,
                username: 'test_user',
                first_name: 'Test User'
            };
            console.log('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:', testUser);
            updateUserInfo(testUser);
        }
    }
    
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç
    initChat();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
    
    console.log('Mini App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function updateUserInfo(user) {
    console.log('updateUserInfo called with:', user);
    const header = document.querySelector('.header p');
    if (header && user.first_name) {
        header.textContent = ``;
    }
}


// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —á–∞—Ç–∞
    const chatInput = document.getElementById('chat-input');
    if (chatInput) {
        chatInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendChatMessage();
            }
        });
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
function sendMessage(message) {
    if (tg && tg.sendData) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É
        tg.sendData(JSON.stringify({
            action: 'send_message',
            message: message,
            timestamp: Date.now()
        }));
        
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
        
        console.log('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
    } else {
        console.error('Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        showNotification('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');
    }
}



// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message) {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: var(--tg-theme-button-color, #007bff);
        color: var(--tg-theme-button-text-color, #ffffff);
        padding: 12px 20px;
        border-radius: 8px;
        font-size: 14px;
        z-index: 1000;
        animation: slideDown 0.3s ease-out;
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateX(-50%) translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(-50%) translateY(0);
            }
        }
    `;
    document.head.appendChild(style);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.style.animation = 'slideDown 0.3s ease-out reverse';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±–æ—Ç–∞
function handleBotData(data) {
    try {
        const parsedData = JSON.parse(data);
        console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç –±–æ—Ç–∞:', parsedData);
        
        switch (parsedData.action) {
            case 'show_message':
                showNotification(parsedData.message);
                // Re-enable chat input for user response
                const chatInput = document.getElementById('chat-input');
                const sendBtn = document.querySelector('.chat-send-btn');
                if (chatInput) chatInput.disabled = false;
                if (sendBtn) sendBtn.disabled = false;
                break;
            default:
                console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:', parsedData.action);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function onCloseApp() {
    console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è');
    // –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
function onViewportChanged() {
    console.log('–†–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω:', tg.viewportHeight, tg.viewportStableHeight);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram WebApp
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        initApp();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π Telegram
        tg.onEvent('close', onCloseApp);
        tg.onEvent('viewportChanged', onViewportChanged);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±–æ—Ç–∞
        tg.onEvent('mainButtonClicked', function() {
            console.log('–ù–∞–∂–∞—Ç–∞ –≥–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞');
        });
        
    } else {
        console.warn('Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.');
        // –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–µ–∑ Telegram API
        initApp();
    }
});

// –ß–∞—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
let chatHistory = [];

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞
function saveChatToStorage() {
    try {
        const chatData = {
            history: chatHistory,
            timestamp: Date.now(),
            user_id: getUserId()
        };
        localStorage.setItem('neuroevent_chat', JSON.stringify(chatData));
        console.log('üíæ –ß–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage:', chatHistory.length, '—Å–æ–æ–±—â–µ–Ω–∏–π');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–∞:', error);
    }
}

function loadChatFromStorage() {
    try {
        const savedData = localStorage.getItem('neuroevent_chat');
        if (savedData) {
            const chatData = JSON.parse(savedData);
            const currentUserId = getUserId();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–∞—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if (chatData.user_id === currentUserId) {
                chatHistory = chatData.history || [];
                console.log('üìÇ –ß–∞—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ localStorage:', chatHistory.length, '—Å–æ–æ–±—â–µ–Ω–∏–π');
                return true;
            } else {
                console.log('üîÑ –ß–∞—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –æ—á–∏—â–∞–µ–º');
                localStorage.removeItem('neuroevent_chat');
                chatHistory = [];
                return false;
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞:', error);
        chatHistory = [];
    }
    return false;
}

function getUserId() {
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
    const user = tg.initDataUnsafe?.user;
    return user?.id || 'anonymous';
}

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
function restoreChatFromHistory() {
    const chatMessages = document.getElementById('chat-messages');
    if (!chatMessages) return;
    
    // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ)
    const existingMessages = chatMessages.querySelectorAll('.message');
    for (let i = 1; i < existingMessages.length; i++) {
        existingMessages[i].remove();
    }
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
    chatHistory.forEach(chatItem => {
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${chatItem.isUser ? 'user-message' : 'bot-message'}`;
        
        messageDiv.innerHTML = `
            <div class="message-content">${markdownToHtml(chatItem.message)}</div>
            <div class="message-time">${chatItem.timestamp}</div>
        `;
        
        chatMessages.appendChild(messageDiv);
    });
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    setTimeout(() => {
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }, 100);
    
    console.log('üîÑ –ß–∞—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏:', chatHistory.length, '—Å–æ–æ–±—â–µ–Ω–∏–π');
}

// –í–∫–ª—é—á–µ–Ω–∏–µ –±–ª–æ–∫–∞ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function enableChatInput() {
    const chatInput = document.getElementById('chat-input');
    const sendBtn = document.querySelector('.chat-send-btn');
    
    if (chatInput) {
        chatInput.disabled = false;
        chatInput.placeholder = '–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...';
        chatInput.style.opacity = '1';
        chatInput.style.cursor = 'text';
        // –ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    }
    
    if (sendBtn) {
        sendBtn.disabled = false;
        sendBtn.style.opacity = '1';
        sendBtn.style.cursor = 'pointer';
    }
    
    console.log('‚úÖ –ü–æ–ª–µ –≤–≤–æ–¥–∞ –≤–∫–ª—é—á–µ–Ω–æ');
}

// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–ª–æ–∫–∞ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function disableChatInput() {
    const chatInput = document.getElementById('chat-input');
    const sendBtn = document.querySelector('.chat-send-btn');
    
    if (chatInput) {
        chatInput.disabled = true;
        chatInput.placeholder = '';
        chatInput.style.opacity = '0.5';
        chatInput.style.cursor = 'not-allowed';
    }
    
    if (sendBtn) {
        sendBtn.disabled = true;
        sendBtn.style.opacity = '0.5';
        sendBtn.style.cursor = 'not-allowed';
    }
    
    console.log('‚ùå –ü–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ');
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Markdown –≤ HTML
function markdownToHtml(text) {
    if (!text) return '';
    
    return text
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º **—Ç–µ–∫—Å—Ç** –≤ <strong>—Ç–µ–∫—Å—Ç</strong>
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º --- –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é –ª–∏–Ω–∏—é
        .replace(/^---$/gm, '<hr>')
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ <br>
        .replace(/\n/g, '<br>');
}

function addMessageToChat(message, isUser = false, timestamp = null) {
    const chatMessages = document.getElementById('chat-messages');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞
    if (!isUser && (message.includes('–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º') || 
                   message.includes('–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞'))) {
        console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞, –æ—á–∏—â–∞–µ–º localStorage');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
        clearLocalChat();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification('üîÑ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            window.location.reload();
        }, 2000);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –±–æ—Ç-—Å–æ–æ–±—â–µ–Ω–∏–π)
    if (!isUser) {
        // –°–æ–∑–¥–∞–µ–º —Ö–µ—à —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        const messageHash = btoa(message.trim()).substring(0, 20);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª—è–ª–∏ –ª–∏ –º—ã —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–∞–≤–Ω–æ
        if (lastAddedMessageHash === messageHash) {
            console.log('üîÑ –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–µ–¥–∞–≤–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ');
            console.log('üîç –•–µ—à —Å–æ–æ–±—â–µ–Ω–∏—è:', messageHash);
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ DOM
        const existingMessages = chatMessages.querySelectorAll('.message.bot-message');
        for (let existingMsg of existingMessages) {
            const existingContent = existingMsg.querySelector('.message-content');
            if (existingContent) {
                const existingText = existingContent.textContent.trim();
                const newText = message.trim();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –ø–µ—Ä–≤—ã–º 50 —Å–∏–º–≤–æ–ª–∞–º –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
                if (existingText.substring(0, 50) === newText.substring(0, 50)) {
                    console.log('üîÑ –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —á–∞—Ç–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ');
                    console.log('üîç –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—Å—Ç:', existingText.substring(0, 30) + '...');
                    console.log('üîç –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç:', newText.substring(0, 30) + '...');
                    return;
                }
            }
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ö–µ—à –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        lastAddedMessageHash = messageHash;
    }
    
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', {
        message: message.substring(0, 50) + '...',
        isUser: isUser,
        className: messageDiv.className
    });
    
    const time = timestamp || new Date().toLocaleTimeString('ru-RU', {
        hour: '2-digit',
        minute: '2-digit'
    });
    
    messageDiv.innerHTML = `
        <div class="message-content">${markdownToHtml(message)}</div>
        <div class="message-time">${time}</div>
    `;
    
    chatMessages.appendChild(messageDiv);
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    setTimeout(() => {
        chatMessages.scrollTo({
            top: chatMessages.scrollHeight,
            behavior: 'smooth'
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        toggleScrollButton();
    }, 100);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    chatHistory.push({
        message: message,
        isUser: isUser,
        timestamp: time
    });
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 50 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    if (chatHistory.length > 50) {
        chatHistory = chatHistory.slice(-50);
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∞—Ç –≤ localStorage
    saveChatToStorage();
    
    // –ù–ï –≤–∫–ª—é—á–∞–µ–º –±–ª–æ–∫ –≤–≤–æ–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
    // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    // —á–µ—Ä–µ–∑ getLatestMessage()
    console.log('üìù –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç:', isUser ? '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : '–±–æ—Ç');
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
async function sendChatMessage() {
    const chatInput = document.getElementById('chat-input');
    const sendBtn = document.querySelector('.chat-send-btn');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ –ª–∏ —É–∂–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    if (chatInput && chatInput.disabled) {
        console.log('‚ö†Ô∏è –ü–æ–ª–µ –≤–≤–æ–¥–∞ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É');
        return;
    }
    
    // –û—Ç–∫–ª—é—á–∞–µ–º –±–ª–æ–∫ –≤–≤–æ–¥–∞ –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    console.log('üîí –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è');
    disableChatInput();
    
    // Existing logic to add user message and send to API
    const message = chatInput.value.trim();
    
    if (!message) {
        // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ, –≤–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ–±—Ä–∞—Ç–Ω–æ
        enableChatInput();
        return;
    }
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', message);
    addMessageToChat(message, true);
    chatInput.value = '';
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    isWaitingForAdminMessage = true;
    console.log('‚è≥ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    showTypingIndicator();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É
    sendMessageToBot(message);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
function showTypingIndicator() {
    const chatMessages = document.getElementById('chat-messages');
    const typingDiv = document.createElement('div');
    typingDiv.className = 'message bot-message typing-indicator';
    typingDiv.innerHTML = `
        <div class="message-content">
            <span class="typing-dots">
                <span>.</span><span>.</span><span>.</span>
            </span>
        </div>
    `;
    
    chatMessages.appendChild(typingDiv);
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É –ø–µ—á–∞—Ç–∏
    setTimeout(() => {
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }, 100);
    
    return typingDiv;
}

// –£–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
function removeTypingIndicator() {
    const typingIndicator = document.querySelector('.typing-indicator');
    if (typingIndicator) {
        typingIndicator.remove();
    }
    
    // –ù–ï –≤–∫–ª—é—á–∞–µ–º –±–ª–æ–∫ –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –∂–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞
    if (!isWaitingForAdminMessage) {
        console.log('üîì –í–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏');
        enableChatInput();
    } else {
        console.log('‚è≥ –ü–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º - –∂–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É —á–µ—Ä–µ–∑ OpenAI API
async function sendMessageToBot(message) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
        const user = tg.initDataUnsafe?.user;
        console.log('Telegram WebApp user data:', user);
        console.log('tg.initDataUnsafe:', tg.initDataUnsafe);
        console.log('tg.initData:', tg.initData);
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let user_id = 0;
        let username = '';
        let first_name = 'MiniApp';
        
        if (user) {
            user_id = user.id || 0;
            username = user.username || '';
            first_name = user.first_name || 'MiniApp';
        } else {
            // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏—Ö –∏–∑ initData
            try {
                const initData = tg.initData;
                console.log('Raw initData:', initData);
                if (initData) {
                    // –ü–∞—Ä—Å–∏–º initData –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è user_id
                    const urlParams = new URLSearchParams(initData);
                    const userParam = urlParams.get('user');
                    if (userParam) {
                        const userData = JSON.parse(decodeURIComponent(userParam));
                        console.log('Parsed user data from initData:', userData);
                        user_id = userData.id || 0;
                        username = userData.username || '';
                        first_name = userData.first_name || 'MiniApp';
                    }
                }
            } catch (e) {
                console.log('Error parsing initData:', e);
            }
            
            // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç user_id, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            if (user_id === 0) {
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π user_id –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                user_id = Math.floor(Math.random() * 1000000) + 100000;
                username = 'test_user_' + user_id;
                first_name = 'Test User';
                console.log('Using generated user_id for local development:', user_id);
            }
        }
        
        console.log('Final user data:', { user_id, username, first_name });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
        const response = await fetch('/api/chat', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                message: message,
                history: chatHistory.slice(-10), // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç
                user_id: user_id,
                username: username,
                first_name: first_name
            })
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        if (data.success) {
            removeTypingIndicator();
            addMessageToChat(data.response, false);
        } else {
            throw new Error('API returned error');
        }
        
    } catch (error) {
        removeTypingIndicator();
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        
        // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–∞
        const botResponse = generateBotResponse(message);
        addMessageToChat(botResponse, false);
        
        // –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ isWaitingForAdminMessage –ø—Ä–∏ –æ—à–∏–±–∫–µ
        // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏, –Ω–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º');
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
function generateBotResponse(userMessage) {
    const message = userMessage.toLowerCase();
    
    // –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    if (message.includes('–ø—Ä–∏–≤–µ—Ç') || message.includes('hello') || message.includes('hi')) {
        return '–ü—Ä–∏–≤–µ—Ç! üëã –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?';
    }
    
    if (message.includes('–∫–∞–∫ –¥–µ–ª–∞') || message.includes('–∫–∞–∫ —Ç—ã')) {
        return '–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! ü§ñ –†–∞–±–æ—Ç–∞—é, –æ—Ç–≤–µ—á–∞—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. –ê —É —Ç–µ–±—è –∫–∞–∫ –¥–µ–ª–∞?';
    }
    
    if (message.includes('—Å–ø–∞—Å–∏–±–æ') || message.includes('thanks')) {
        return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å!';
    }
    
    if (message.includes('–ø–æ–≥–æ–¥–∞')) {
        return '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–≥–æ–¥—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –ù–æ –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —É —Ç–µ–±—è —Ö–æ—Ä–æ—à–∞—è –ø–æ–≥–æ–¥–∞! ‚òÄÔ∏è';
    }
    
    if (message.includes('–≤—Ä–µ–º—è') || message.includes('–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å')) {
        const now = new Date();
        return `–°–µ–π—á–∞—Å ${now.toLocaleTimeString('ru-RU')} ‚è∞`;
    }
    
    if (message.includes('–ø–æ–º–æ—â—å') || message.includes('help')) {
        return '–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏! –ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å –æ –≤—Ä–µ–º–µ–Ω–∏, –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å–æ –º–Ω–æ–π! üòä';
    }
    
    if (message.includes('–±–æ—Ç') || message.includes('robot')) {
        return '–î–∞, —è –±–æ—Ç! ü§ñ –ù–æ —è —Å—Ç–∞—Ä–∞—é—Å—å –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º. –ï—Å—Ç—å —á—Ç–æ-—Ç–æ, —Å —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?';
    }
    
    if (message.includes('—á—Ç–æ —É–º–µ–µ—à—å') || message.includes('—Ñ—É–Ω–∫—Ü–∏–∏')) {
        return '–Ø —É–º–µ—é:\n‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è\n‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏\n‚Ä¢ –ü—Ä–æ—Å—Ç–æ –æ–±—â–∞—Ç—å—Å—è! üòä';
    }
    
    // –°–ª—É—á–∞–π–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    const randomResponses = [
        '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ! ü§î',
        '–ü–æ–Ω—è–ª —Ç–µ–±—è! üëç',
        '–≠—Ç–æ –∑–≤—É—á–∏—Ç –∑–¥–æ—Ä–æ–≤–æ! üòä',
        '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! üòÑ',
        '–Ø —Å–ª—É—à–∞—é! üëÇ',
        '–û—Ç–ª–∏—á–Ω–∞—è –º—ã—Å–ª—å! üí≠',
        '–ü—Ä–æ–¥–æ–ª–∂–∞–π! üìù',
        '–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! üéØ'
    ];
    
    return randomResponses[Math.floor(Math.random() * randomResponses.length)];
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ —á–∞—Ç–µ
function handleChatKeyPress(event) {
    if (event.key === 'Enter' && !event.shiftKey) {
        event.preventDefault();
        
        const chatInput = document.getElementById('chat-input');
        if (chatInput && chatInput.disabled) {
            console.log('‚ö†Ô∏è –ü–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ Enter');
            return;
        }
        
        sendChatMessage();
    }
}

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
let lastMessageTimestamp = 0;
let isInitialized = false;
let isWaitingForAdminMessage = false; // –§–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞
async function getLatestMessage() {
    try {
        console.log('üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞...');
        const response = await fetch('/api/mini-app/latest-message');
        const data = await response.json();
        
        console.log('üì® –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
            success: data.success,
            hasMessage: !!data.message,
            messageLength: data.message ? data.message.length : 0,
            timestamp: data.timestamp,
            isInitialized: isInitialized,
            lastMessageTimestamp: lastMessageTimestamp,
            isRecent: data.is_recent,
            lastAdminTime: data.last_admin_time
        });
        
        if (data.success && data.message && data.timestamp) {
            // –ü—Ä–∏ –ø–µ—Ä–≤–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ä–∞–∑—É, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            if (!isInitialized) {
                lastMessageTimestamp = data.timestamp;
                isInitialized = true;
                console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', lastMessageTimestamp);
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å—Ä–∞–∑—É
                if (data.message.trim()) {
                    console.log('üì® –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', data.message.substring(0, 50) + '...');
                    addMessageToChat(data.message, false);
                    enableChatInput();
                }
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–ª—É—á–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (data.timestamp > lastMessageTimestamp) {
                console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
                console.log('üì® –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', data.message.substring(0, 100) + '...');
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
                addMessageToChat(data.message, false);
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                isWaitingForAdminMessage = false;
                console.log('üîÑ –°–±—Ä–æ—à–µ–Ω —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
                
                // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –±–ª–æ–∫ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞
                console.log('üîì –í–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
                enableChatInput();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                lastMessageTimestamp = data.timestamp;
                
                console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ:', data.message.substring(0, 50) + '...');
            } else if (data.is_recent && data.timestamp === lastMessageTimestamp) {
                // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–∞–≤–Ω–µ–µ, –Ω–æ timestamp —Ç–æ—Ç –∂–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
                console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ–¥–∞–≤–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–º –∂–µ timestamp, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ...');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
                const chatMessages = document.getElementById('chat-messages');
                const existingMessages = chatMessages.querySelectorAll('.message.bot-message');
                let messageExists = false;
                
                for (let existingMsg of existingMessages) {
                    const existingContent = existingMsg.querySelector('.message-content');
                    if (existingContent) {
                        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ –Ω–µ HTML
                        const existingText = existingContent.textContent.trim();
                        const newText = data.message.trim();
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –ø–µ—Ä–≤—ã–º 50 —Å–∏–º–≤–æ–ª–∞–º –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
                        if (existingText.substring(0, 50) === newText.substring(0, 50)) {
                            messageExists = true;
                            console.log('üîç –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏—Ä—É—é—â–µ–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ:', existingText.substring(0, 30) + '...');
                            break;
                        }
                    }
                }
                
                if (!messageExists) {
                    console.log('üì® –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–¥–∞–≤–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –≤ —á–∞—Ç–µ');
                    addMessageToChat(data.message, false);
                    enableChatInput();
                } else {
                    console.log('üîç –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —á–∞—Ç–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ');
                }
            } else {
                console.log('üîç –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –ø–æ–ª—É—á–µ–Ω–æ —Ä–∞–Ω–µ–µ –∏–ª–∏ timestamp –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è');
            }
        } else {
            console.log('‚ùå –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∞–¥–º–∏–Ω–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function startMessagePolling() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
    setInterval(getLatestMessage, 2000);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞
function initChat() {
    const chatInput = document.getElementById('chat-input');
    if (chatInput) {
        chatInput.addEventListener('keypress', handleChatKeyPress);
        
        // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –±–ª–æ–∫ –≤–≤–æ–¥–∞ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
        disableChatInput();
        
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
        initClearCheck();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –∏–∑ localStorage
        const chatLoaded = loadChatFromStorage();
        if (chatLoaded && chatHistory.length > 0) {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Ç –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
            restoreChatFromHistory();
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∞–¥–º–∏–Ω–∞
        startMessagePolling();
        
        // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        getLatestMessage();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        initScrollHandler();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
        initClearCheck();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
        startChatClearMonitoring();
    }
    
    // –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –µ—Å—Ç—å –≤ HTML, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–µ–µ
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
function scrollToBottom() {
    const chatMessages = document.getElementById('chat-messages');
    const scrollBtn = document.getElementById('scroll-to-bottom-btn');
    
    if (chatMessages) {
        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–∞–º–æ–º—É –Ω–∏–∑—É
        chatMessages.scrollTo({
            top: chatMessages.scrollHeight,
            behavior: 'smooth'
        });
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        setTimeout(() => {
            if (scrollBtn) {
                scrollBtn.classList.remove('show');
            }
        }, 500);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
function toggleScrollButton() {
    const chatMessages = document.getElementById('chat-messages');
    const scrollBtn = document.getElementById('scroll-to-bottom-btn');
    
    if (chatMessages && scrollBtn) {
        const isAtBottom = chatMessages.scrollTop + chatMessages.clientHeight >= chatMessages.scrollHeight - 20;
        
        if (isAtBottom) {
            scrollBtn.classList.remove('show');
            scrollBtn.style.display = 'none';
        } else {
            scrollBtn.classList.add('show');
            scrollBtn.style.display = 'flex';
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
function initScrollHandler() {
    const chatMessages = document.getElementById('chat-messages');
    if (chatMessages) {
        chatMessages.addEventListener('scroll', toggleScrollButton);
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
let lastClearCheck = 0;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è lastClearCheck –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function initClearCheck() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π timestamp –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    fetch('/api/check-chat-clear-status')
        .then(response => response.json())
        .then(data => {
            console.log('üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—á–∏—Å—Ç–∫–∏:', data);
            if (data.success && data.clear_timestamp) {
                lastClearCheck = data.clear_timestamp;
                console.log('üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω lastClearCheck:', lastClearCheck);
                
                // –ï—Å–ª–∏ —á–∞—Ç –±—ã–ª –æ—á–∏—â–µ–Ω –Ω–µ–¥–∞–≤–Ω–æ (–≤ —Ç–µ—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –º–∏–Ω—É—Ç), 
                // –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Ç
                const now = Date.now();
                const tenMinutesAgo = now - (10 * 60 * 1000);
                
                if (data.clear_timestamp > tenMinutesAgo) {
                    console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–µ–¥–∞–≤–Ω—è—è –æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Ç');
                    clearLocalChat();
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    showNotification('üîÑ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
                }
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ lastClearCheck:', error);
        });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞
function clearLocalChat() {
    console.log('üîÑ –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞');
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏ localStorage
    localStorage.removeItem('neuroevent_chat');
    localStorage.removeItem('mini_app_chat_history');
    localStorage.removeItem('mini_app_user_data');
    localStorage.removeItem('chat_history');
    localStorage.removeItem('user_data');
    
    // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç
    chatHistory = [];
    const chatMessages = document.getElementById('chat-messages');
    if (chatMessages) {
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const welcomeMessage = chatMessages.querySelector('.message:first-child');
        chatMessages.innerHTML = '';
        if (welcomeMessage) {
            chatMessages.appendChild(welcomeMessage);
        }
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    isWaitingForAdminMessage = false;
    lastMessageTimestamp = 0;
    
    console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω');
}
async function checkChatClearStatus() {
    try {
        const response = await fetch('/api/check-chat-clear-status');
        const data = await response.json();
        
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞:', data);
        console.log('üîç lastClearCheck:', lastClearCheck);
        
        if (data.success && data.chat_cleared && data.clear_timestamp) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞ (timestamp –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ)
            if (data.clear_timestamp > lastClearCheck) {
                console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
                lastClearCheck = data.clear_timestamp;
                
                // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Ç
                clearLocalChat();
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showNotification('üîÑ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
                
                // –ù–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ä–∞–∑—É, –¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Ä–µ–º—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                setTimeout(() => {
                    window.location.reload();
                }, 2000);
            } else {
                console.log('üîç –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Ä–∞–Ω–µ–µ');
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
function startChatClearMonitoring() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
    setInterval(checkChatClearStatus, 3000);
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
window.sendMessage = sendMessage;
window.sendChatMessage = sendChatMessage;
window.handleBotData = handleBotData;
window.enableChatInput = enableChatInput;
window.disableChatInput = disableChatInput;
window.scrollToBottom = scrollToBottom;
