#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

import os
import sys

def update_config_file(enable: bool):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª config.py"""
    config_path = "config.py"
    
    if not os.path.exists(config_path):
        print(f"‚ùå –§–∞–π–ª {config_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(config_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    old_line = f"ENABLE_IMAGE_GENERATION = {not enable}"
    new_line = f"ENABLE_IMAGE_GENERATION = {enable}"
    
    if old_line in content:
        content = content.replace(old_line, new_line)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(config_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {config_path}: ENABLE_IMAGE_GENERATION = {enable}")
        return True
    else:
        print(f"‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ENABLE_IMAGE_GENERATION –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ {config_path}")
        return False

def update_nanabanana_file(enable: bool):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª NanaBanana/app.py"""
    app_path = "NanaBanana/app.py"
    
    if not os.path.exists(app_path):
        print(f"‚ùå –§–∞–π–ª {app_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(app_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    old_line = f"ENABLE_IMAGE_GENERATION = {not enable}"
    new_line = f"ENABLE_IMAGE_GENERATION = {enable}"
    
    if old_line in content:
        content = content.replace(old_line, new_line)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(app_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {app_path}: ENABLE_IMAGE_GENERATION = {enable}")
        return True
    else:
        print(f"‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ENABLE_IMAGE_GENERATION –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ {app_path}")
        return False

def check_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å"""
    try:
        from config import ENABLE_IMAGE_GENERATION, IMAGE_GENERATION_MESSAGE
        
        print("üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:")
        print(f"   –í–∫–ª—é—á–µ–Ω–∞: {'‚úÖ –î–∞' if ENABLE_IMAGE_GENERATION else '‚ùå –ù–µ—Ç'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {IMAGE_GENERATION_MESSAGE}")
        
        return ENABLE_IMAGE_GENERATION
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        print("=" * 50)
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python manage_image_generation.py status    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
        print("  python manage_image_generation.py enable    # –í–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é")
        print("  python manage_image_generation.py disable   # –û—Ç–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é")
        print("  python manage_image_generation.py toggle    # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
        return
    
    command = sys.argv[1].lower()
    
    if command == "status":
        check_status()
    
    elif command == "enable":
        print("üîÑ –í–∫–ª—é—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        success1 = update_config_file(True)
        success2 = update_nanabanana_file(True)
        
        if success1 and success2:
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤–∫–ª—é—á–µ–Ω–∞!")
        else:
            print("‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é.")
    
    elif command == "disable":
        print("üîÑ –û—Ç–∫–ª—é—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        success1 = update_config_file(False)
        success2 = update_nanabanana_file(False)
        
        if success1 and success2:
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞!")
        else:
            print("‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é.")
    
    elif command == "toggle":
        current_status = check_status()
        if current_status is None:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å")
            return
        
        new_status = not current_status
        print(f"üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å {'–≤–∫–ª—é—á–µ–Ω–æ' if current_status else '–æ—Ç–∫–ª—é—á–µ–Ω–æ'} –Ω–∞ {'–≤–∫–ª—é—á–µ–Ω–æ' if new_status else '–æ—Ç–∫–ª—é—á–µ–Ω–æ'}...")
        
        success1 = update_config_file(new_status)
        success2 = update_nanabanana_file(new_status)
        
        if success1 and success2:
            print(f"‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π {'–≤–∫–ª—é—á–µ–Ω–∞' if new_status else '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}!")
        else:
            print("‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é.")
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: status, enable, disable, toggle")

if __name__ == "__main__":
    main()
